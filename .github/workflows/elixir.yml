on: [push, pull_request]

jobs:
  test:
    runs-on: ubuntu-latest
    name: OTP ${{matrix.otp}} / Elixir ${{matrix.elixir}}
    strategy:
      matrix:
        otp: [24.x, 25.x]
        elixir: [1.14.x]
        include:
          - check_formatted: true
            check_style: true
            run_latest: true

    services:
      postgres:
        image: postgres:11
        ports:
          - 5432/tcp
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 3
    steps:
      - uses: actions/checkout@v3
      - uses: erlef/setup-beam@v1
        with:
          otp-version: ${{matrix.otp}}
          elixir-version: ${{matrix.elixir}}
      - name: Install Dependencies
        run: mix deps.get && mix deps.unlock --check-unused
      - name: Check formatting
        if: matrix.check_formatted
        run: mix format --check-formatted
      - name: Check style
        if: matrix.check_style
        run: mix credo --format flycheck
      - name: Compile project
        run: mix compile --warnings-as-errors
      - name: Run tests for older versions
        if: false == matrix.run_latest
        run: mix test --cover --exclude skip_before:1.13
        env:
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
      - name: Run tests
        if: matrix.run_latest
        run: mix test --cover
        env:
          DB_HOST: localhost
          DB_PORT: ${{ job.services.postgres.ports[5432] }}
